name: Test

on:
  push:
    branches-ignore:
      - master
  pull_request:

jobs:
  test:
    name: python ${{ matrix.python-version }} on alpine
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
      fail-fast: true
    steps:
    - uses: jirutka/setup-alpine@v1
    - name: setup python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: "py version"
      run: python --version
      # - name: setup pyenv
      #   run: curl https://pyenv.run | bash
      # - name: setup python ${{ matrix.python-version }}
      #   run: |
      #     $HOME/.pyenv/bin/pyenv install ${{ matrix.python-version }}
      #     $HOME/.pyenv/bin/pyenv global ${{ matrix.python-version }}
      #     python --version
      # - name: setup poetry
      #   run: |
      #     export POETRY_HOME=/opt/poetry
      #     curl -sSL https://install.python-poetry.org | python -
      # - name: 'poetry version'
      #   run: /opt/poetry/bin/poetry --version
      # - name: 'python version'
      #   run: /opt/poetry/bin/poetry run python --version
